{"version":3,"sources":["components/header.tsx","components/history.tsx","pages/home.tsx","components/editor.tsx","config/mappings.ts","utils/API.ts","config/config.ts","utils/utils.ts","pages/room.tsx","utils/socket.ts","pages/notfound.tsx","routes.ts","pages/joinroom.tsx","pages/newroom.tsx","app.tsx","index.tsx"],"names":["withRouter","props","useState","roomId","setRoomId","className","to","type","id","placeholder","value","onChange","e","target","onClick","history","push","History","previousRooms","useEffect","scope","map","room","index","split","roomTitle","style","display","textDecoration","color","Home","length","Editor","language","theme","body","setBody","height","readOnly","width","fontSize","mode","isNaN","name","showGutter","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","languageToEditorMode","c","cpp","python","python3","java","javascript","kotlin","rust","API","axios","create","baseURL","debounce","func","timeout","timer","args","clearTimeout","setTimeout","myPeer","myAudio","socket","io","audios","peers","setId","title","setTitle","input","setInput","output","setOutput","widthLeft","setWidthLeft","widthRight","setWidthRight","window","innerWidth","windowWidth","setWindowWidth","languages","Object","keys","themes","sort","localStorage","getItem","setLanguage","setTheme","setFontSize","runningStatus","errorStatus","submissionStatus","setSubmissionStatus","submissionId","setSubmissionId","submissionCheckerId","setSubmissionCheckerId","inAudio","setInAudio","isMuted","setIsMuted","dmp","diff_match_patch","off","on","emit","patch","patch_apply","newBody","console","log","newInput","match","params","get","then","res","data","document","updatePreviousRooms","catch","err","destroyConnection","resizeCallback","addEventListener","removeEventListener","clearInterval","querystring","URLSearchParams","api_key","toString","stdout","stderr","build_stderr","setInterval","updateSubmissionStatus","status","setItem","createAudio","stream","audio","createElement","srcObject","muted","autoplay","removeAudio","getElementById","remove","getTracks","forEach","track","stop","destroy","Peer","userId","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","getAudioTracks","enabled","call","metadata","userAudioStream","destroyed","newUserConnection","answer","setPeersListeners","reconnect","close","defaultValue","event","lang","selected","clipboard","writeText","location","href","minSize","maxSize","defaultSize","marginRight","x","source_code","post","disabled","patch_make","NotFound","roomProps","routes","path","exact","component","Room","roomName","setRoomName","alert","App","setPreviousRooms","newRooms","unshift","slice","prevRoomsString","JSON","parse","stringify","render","route","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7a17417a.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\n\nconst Header: React.FC<RouteComponentProps<any>> = (props) => {\n    const [roomId, setRoomId] = useState<string>();\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    Discode\n                </Link>\n                <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#navbarSupportedContent\"\n                    aria-controls=\"navbarSupportedContent\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                                Home\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/newroom\">\n                                New Room\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/joinroom\">\n                                Join Room\n                            </Link>\n                        </li>\n                    </ul>\n                    <div className=\"d-flex\">\n                        <input\n                            className=\"form-control me-2\"\n                            type=\"search\"\n                            placeholder=\"Enter Room ID\"\n                            aria-label=\"Search\"\n                            value={roomId}\n                            onChange={(e) => setRoomId(e.target.value)}\n                        />\n                        <button\n                            className=\"btn btn-outline-success\"\n                            onClick={() => {\n                                if (roomId) {\n                                    props.history.push(`/room/${roomId}`);\n                                    setRoomId('');\n                                }\n                            }}\n                        >\n                            Join\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface HistoryProps {\n    previousRooms: string[];\n}\n\nconst History: React.FC<HistoryProps> = ({ previousRooms }) => {\n    useEffect(() => {}, [previousRooms]);\n\n    return (\n        <div>\n            <table className=\"table table-hover\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {previousRooms.map((room, index) => {\n                        const [roomId, roomTitle] = room.split('!', 2);\n                        return (\n                            <tr key={index}>\n                                <td>\n                                    <Link\n                                        style={{\n                                            display: 'block',\n                                            textDecoration: 'none',\n                                            color: 'black'\n                                        }}\n                                        to={`/room/${roomId}`}\n                                    >\n                                        {roomId}\n                                    </Link>\n                                </td>\n                                <td>\n                                    <Link\n                                        style={{\n                                            display: 'block',\n                                            textDecoration: 'none',\n                                            color: 'black'\n                                        }}\n                                        to={`/room/${roomId}`}\n                                    >\n                                        {roomTitle}\n                                    </Link>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default History;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport History from '../components/history';\n\ninterface HomeProps {\n    previousRooms: string[];\n}\n\nconst Home: React.FC<HomeProps> = ({ previousRooms }) => {\n    return (\n        <div className=\"p-5 text-center\">\n            <div>\n                <h1 className=\"mb-3\">Discode</h1>\n                <h4 className=\"mb-3\">Code collaboration with voice rooms</h4>\n                <small className=\"mb-3\">\n                    Now you don't need to be on discord and screen share anymore fellow coders :p\n                </small>\n                <br />\n                <br />\n                <Link className=\"btn btn-primary p-2 m-2\" to=\"/newroom\">\n                    Create a room\n                </Link>\n                <Link className=\"btn btn-primary p-2 m-2\" to=\"/joinroom\">\n                    Join an existing room\n                </Link>\n            </div>\n            <br />\n            {previousRooms.length > 0 ? (\n                <div>\n                    <hr />\n                    <br />\n                    <h3>Your history</h3>\n                    <History previousRooms={previousRooms} />\n                </div>\n            ) : (\n                <div />\n            )}\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-noconflict/ext-language_tools';\n\nimport 'ace-builds/src-noconflict/mode-java';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/mode-python';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/mode-rust';\nimport 'ace-builds/src-noconflict/mode-kotlin';\n\nimport 'ace-builds/src-noconflict/theme-github';\nimport 'ace-builds/src-noconflict/theme-solarized_dark';\nimport 'ace-builds/src-noconflict/theme-dracula';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/theme-eclipse';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night';\nimport 'ace-builds/src-noconflict/theme-tomorrow_night_blue';\nimport 'ace-builds/src-noconflict/theme-xcode';\nimport 'ace-builds/src-noconflict/theme-ambiance';\nimport 'ace-builds/src-noconflict/theme-solarized_light';\n\ninterface EditorProps {\n    language: string;\n    theme: string;\n    body: string;\n    setBody: (body: string) => void;\n    height?: string;\n    width?: string;\n    readOnly?: boolean;\n    fontSize?: string;\n}\n\nconst Editor: React.FC<EditorProps> = ({\n    language,\n    theme,\n    body,\n    setBody,\n    height,\n    readOnly,\n    width,\n    fontSize\n}) => {\n    return (\n        <div>\n            <AceEditor\n                mode={language}\n                theme={theme}\n                onChange={(value) => setBody(value)}\n                value={body}\n                width={width ? width : '100%'}\n                height={height ? height : '73vh'}\n                readOnly={readOnly ? readOnly : false}\n                fontSize={fontSize ? (isNaN(+fontSize) ? 12 : +fontSize) : 12}\n                name=\"UNIQUE_ID_OF_DIV\"\n                showGutter={true}\n                editorProps={{ $blockScrolling: true }}\n                setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true\n                }}\n            />\n        </div>\n    );\n};\n\nexport default Editor;\n","const languageToEditorMode = {\n    c: 'c_cpp',\n    cpp: 'c_cpp',\n    python: 'python',\n    python3: 'python',\n    java: 'java',\n    javascript: 'javascript',\n    kotlin: 'kotlin',\n    rust: 'rust'\n};\n\nexport { languageToEditorMode };\n","import axios from 'axios';\nimport { baseURL } from '../config/config';\n\nconst API = axios.create({\n    baseURL: baseURL\n});\n\nexport default API;\n","const baseURL = process.env.NODE_ENV == 'production' ? '/' : 'http://localhost:8080';\n\nexport { baseURL };\n","export function debounce<Params extends any[]>(\n    func: (...args: Params) => any,\n    timeout: number\n): (...args: Params) => void {\n    let timer: NodeJS.Timeout;\n    return (...args: Params) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => {\n            func(...args);\n        }, timeout);\n    };\n}\n","import React, { useEffect, useState } from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router';\nimport Editor from '../components/editor';\nimport { languageToEditorMode } from '../config/mappings';\nimport API from '../utils/API';\nimport { debounce } from '../utils/utils';\nimport SplitPane from 'react-split-pane';\n\nimport socket from './../utils/socket';\nimport { baseURL } from '../config/config';\nimport Peer, { MediaConnection } from 'peerjs';\nimport { diff_match_patch } from 'diff-match-patch';\n\ninterface RoomProps {\n    updatePreviousRooms: (room: string) => any;\n}\n\nvar myPeer: Peer;\nvar audios: { [id: string]: { id: string; stream: MediaStream } } = {};\nvar peers: { [id: string]: MediaConnection } = {};\nvar myAudio: MediaStream | null;\n\n// Audio rooms work fine for the most part, except for the asynchrousity caused by hooks that sometimes leads\n// to trying to destroy an already destoyed thing, or when we were in process of it.\n// So yeah, something to work on #TODO\n\nconst Room: React.FC<RouteComponentProps<any> & RoomProps> = (props) => {\n    const [id, setId] = useState<string>('');\n    const [title, setTitle] = useState<string>('');\n    const [body, setBody] = useState<string>('');\n    const [input, setInput] = useState<string>('');\n    const [output, setOutput] = useState<string>('');\n\n    const [widthLeft, setWidthLeft] = useState<string>('');\n    const [widthRight, setWidthRight] = useState<string>('');\n    const [windowWidth, setWindowWidth] = useState<number>(window.innerWidth);\n\n    const languages = Object.keys(languageToEditorMode);\n    const fontSizes = ['8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30', '32'];\n    const themes = [\n        'monokai',\n        'github',\n        'solarized_dark',\n        'dracula',\n        'eclipse',\n        'tomorrow_night',\n        'tomorrow_night_blue',\n        'xcode',\n        'ambiance',\n        'solarized_light'\n    ].sort();\n\n    const [language, setLanguage] = useState<string>(localStorage.getItem('language') ?? 'c');\n    const [theme, setTheme] = useState<string>(localStorage.getItem('theme') ?? 'monokai');\n    const [fontSize, setFontSize] = useState<string>(localStorage.getItem('fontSize') ?? '12');\n\n    const idleStatus = 'Idle';\n    const runningStatus = 'running';\n    const compeletedStatus = 'completed';\n    const errorStatus = 'Some error occured';\n\n    const [submissionStatus, setSubmissionStatus] = useState<string>(idleStatus);\n    const [submissionId, setSubmissionId] = useState<string>('');\n\n    const [submissionCheckerId, setSubmissionCheckerId] = useState<NodeJS.Timeout | null>(null);\n\n    const [inAudio, setInAudio] = useState<boolean>(false);\n    const [isMuted, setIsMuted] = useState<boolean>(false);\n\n    const dmp = new diff_match_patch();\n\n    useEffect(() => {\n        socket.off('userjoined');\n        socket.on('userjoined', () => {\n            socket.emit('setBody', { value: body, roomId: id });\n            socket.emit('setLanguage', { value: language, roomId: id });\n            socket.emit('setInput', { value: input, roomId: id });\n            socket.emit('setOutput', { value: output, roomId: id });\n        });\n    }, [body, language, input, output]);\n\n    useEffect(() => {\n        socket.off('updateBody');\n        socket.on('updateBody', (patch) => {\n            const [newBody, res] = dmp.patch_apply(patch, body);\n            if (res[0]) setBody(newBody);\n            else console.log('Failed', body, patch);\n        });\n    }, [body]);\n\n    useEffect(() => {\n        socket.off('updateInput');\n        socket.on('updateInput', (patch) => {\n            const [newInput, res] = dmp.patch_apply(patch, input);\n            if (res[0]) setInput(newInput);\n            else console.log('Failed', body, patch);\n        });\n    }, [input]);\n\n    useEffect(() => {\n        const id = props.match.params.id;\n        setId(id);\n        socket.emit('joinroom', id);\n\n        API.get(`/api/room/${id}`)\n            .then((res) => {\n                const { title, body, language, input } = res.data.data;\n                if (title) {\n                    setTitle(title);\n                    document.title = `Discode: ${title}`;\n                    props.updatePreviousRooms(`${id}!${title}`);\n                }\n                setBody(body ?? '');\n                setInput(input ?? '');\n                if (language) setLanguage(language);\n                console.log(language);\n            })\n            .catch((err) => {\n                props.history.push('/404');\n            });\n        return () => {\n            if (myPeer) {\n                socket.emit('leaveAudioRoom', myPeer.id);\n                destroyConnection();\n            }\n            myAudio = null;\n            socket.emit('leaveroom', id);\n        };\n    }, [props.match.params.id]);\n\n    useEffect(() => {\n        socket.on('setBody', (body) => {\n            setBody(body);\n        });\n        socket.on('setInput', (input) => {\n            setInput(input);\n        });\n        socket.on('setLanguage', (language) => {\n            setLanguage(language);\n        });\n        socket.on('setOutput', (output) => {\n            setOutput(output);\n        });\n\n        const resizeCallback = () => setWindowWidth(window.innerWidth);\n        window.addEventListener('resize', resizeCallback);\n\n        return () => {\n            window.removeEventListener('resize', resizeCallback);\n        };\n    }, []);\n\n    useEffect(() => {\n        setInAudio(false);\n    }, [id]);\n\n    useEffect(() => {\n        if (submissionCheckerId && submissionStatus == compeletedStatus) {\n            clearInterval(submissionCheckerId);\n            setSubmissionCheckerId(null);\n\n            const params = new URLSearchParams({\n                id: submissionId,\n                api_key: 'guest'\n            });\n            const querystring = params.toString();\n            API.get(`https://api.paiza.io/runners/get_details?${querystring}`).then((res) => {\n                const { stdout, stderr, build_stderr } = res.data;\n                console.log(res.data);\n                let output = '';\n                if (stdout) output += stdout;\n                if (stderr) output += stderr;\n                if (build_stderr) output += build_stderr;\n                setOutput(output);\n                socket.emit('setOutput', { value: output, roomId: id });\n            });\n        }\n    }, [submissionStatus]);\n\n    const handleSubmit = () => {\n        if (submissionStatus === runningStatus) return;\n        setSubmissionStatus(runningStatus);\n\n        API.patch(`/api/room/${id}`, { title, body, input, language })\n            .then()\n            .catch((err) => {\n                setSubmissionStatus(errorStatus);\n                return;\n            });\n\n        const params = {\n            source_code: body,\n            language: language,\n            input: input,\n            api_key: 'guest'\n        };\n        API.post(`https://api.paiza.io/runners/create`, params)\n            .then((res) => {\n                const { id, status } = res.data;\n                setSubmissionId(id);\n                setSubmissionStatus(status);\n            })\n            .catch((err) => {\n                setSubmissionId('');\n                setSubmissionStatus(errorStatus);\n            });\n    };\n\n    useEffect(() => {\n        if (submissionId) {\n            setSubmissionCheckerId(setInterval(() => updateSubmissionStatus(), 1000));\n        }\n    }, [submissionId]);\n\n    const updateSubmissionStatus = () => {\n        const params = new URLSearchParams({\n            id: submissionId,\n            api_key: 'guest'\n        });\n        const querystring = params.toString();\n        API.get(`https://api.paiza.io/runners/get_status?${querystring}`).then((res) => {\n            const { status } = res.data;\n            setSubmissionStatus(status);\n        });\n    };\n\n    const handleUpdateBody = (value: string) => {\n        const patch = dmp.patch_make(body, value);\n        setBody(value);\n        debounce(() => socket.emit('updateBody', { value: patch, roomId: id }), 100)();\n    };\n\n    const handleUpdateInput = (value: string) => {\n        const patch = dmp.patch_make(input, value);\n        setInput(value);\n        debounce(() => socket.emit('updateInput', { value: patch, roomId: id }), 100)();\n    };\n\n    const handleWidthChange = (x: number) => {\n        setWidthRight((100 - x).toString());\n        setWidthLeft(x.toString());\n    };\n\n    useEffect(() => {\n        localStorage.setItem('theme', theme);\n    }, [theme]);\n\n    useEffect(() => {\n        localStorage.setItem('language', language);\n    }, [language]);\n\n    useEffect(() => {\n        localStorage.setItem('fontSize', fontSize);\n    }, [fontSize]);\n\n    // Voice room stuff\n    const getAudioStream = () => {\n        const myNavigator =\n            navigator.mediaDevices.getUserMedia ||\n            // @ts-ignore\n            navigator.mediaDevices.webkitGetUserMedia ||\n            // @ts-ignore\n            navigator.mediaDevices.mozGetUserMedia ||\n            // @ts-ignore\n            navigator.mediaDevices.msGetUserMedia;\n        return myNavigator({ audio: true });\n    };\n\n    const createAudio = (data: { id: string; stream: MediaStream }) => {\n        const { id, stream } = data;\n        if (!audios[id]) {\n            const audio = document.createElement('audio');\n            audio.id = id;\n            audio.srcObject = stream;\n            if (myPeer && id == myPeer.id) {\n                myAudio = stream;\n                audio.muted = true;\n            }\n            audio.autoplay = true;\n            audios[id] = data;\n            console.log('Adding audio: ', id);\n        } // } else {\n        //     console.log('adding audio: ', id);\n        //     // @ts-ignore\n        //     document.getElementById(id).srcObject = stream;\n        // }\n    };\n\n    const removeAudio = (id: string) => {\n        delete audios[id];\n        const audio = document.getElementById(id);\n        if (audio) audio.remove();\n    };\n\n    const destroyConnection = () => {\n        console.log('distroying', audios, myPeer.id);\n        if (audios[myPeer.id]) {\n            const myMediaTracks = audios[myPeer.id].stream.getTracks();\n            myMediaTracks.forEach((track) => {\n                track.stop();\n            });\n        }\n        if (myPeer) myPeer.destroy();\n    };\n\n    const setPeersListeners = (stream: MediaStream) => {\n        myPeer.on('call', (call) => {\n            call.answer(stream);\n            call.on('stream', (userAudioStream) => {\n                createAudio({ id: call.metadata.id, stream: userAudioStream });\n            });\n            call.on('close', () => {\n                removeAudio(call.metadata.id);\n            });\n            call.on('error', () => {\n                console.log('peer error');\n                if (!myPeer.destroyed) removeAudio(call.metadata.id);\n            });\n            peers[call.metadata.id] = call;\n        });\n    };\n\n    const newUserConnection = (stream: MediaStream) => {\n        socket.on('userJoinedAudio', (userId) => {\n            const call = myPeer.call(userId, stream, { metadata: { id: myPeer.id } });\n            call.on('stream', (userAudioStream) => {\n                createAudio({ id: userId, stream: userAudioStream });\n            });\n            call.on('close', () => {\n                removeAudio(userId);\n            });\n            call.on('error', () => {\n                console.log('peer error');\n                if (!myPeer.destroyed) removeAudio(userId);\n            });\n            peers[userId] = call;\n        });\n    };\n\n    useEffect(() => {\n        if (inAudio) {\n            myPeer = new Peer();\n            myPeer.on('open', (userId) => {\n                console.log('opened');\n                getAudioStream().then((stream) => {\n                    socket.emit('joinAudioRoom', id, userId);\n                    stream.getAudioTracks()[0].enabled = !isMuted;\n                    newUserConnection(stream);\n                    setPeersListeners(stream);\n                    createAudio({ id: myPeer.id, stream });\n                });\n            });\n            myPeer.on('error', (err) => {\n                console.log('peerjs error: ', err);\n                if (!myPeer.destroyed) myPeer.reconnect();\n            });\n            socket.on('userLeftAudio', (userId) => {\n                console.log('user left aiudio:', userId);\n                if (peers[userId]) peers[userId].close();\n                removeAudio(userId);\n            });\n        } else {\n            console.log('leaving', myPeer);\n            if (myPeer) {\n                socket.emit('leaveAudioRoom', myPeer.id);\n                destroyConnection();\n            }\n            myAudio = null;\n        }\n    }, [inAudio]);\n\n    useEffect(() => {\n        if (inAudio) {\n            if (myAudio) {\n                myAudio.getAudioTracks()[0].enabled = !isMuted;\n            }\n        }\n    }, [isMuted]);\n\n    return (\n        <div>\n            <div className=\"row container-fluid text-center justify-content-center\">\n                <div className=\"form-group col-lg-2 col-md-3\">\n                    <label>Choose Language</label>\n                    <select\n                        className=\"form-select\"\n                        defaultValue={language}\n                        onChange={(event) => {\n                            setLanguage(event.target.value);\n                            socket.emit('setLanguage', {\n                                value: event.target.value,\n                                roomId: id\n                            });\n                        }}\n                    >\n                        {languages.map((lang, index) => {\n                            return (\n                                <option key={index} value={lang} selected={lang == language}>\n                                    {lang}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n                <div className=\"form-group col-lg-2 col-md-3\">\n                    <label>Choose Theme</label>\n                    <select\n                        className=\"form-select\"\n                        defaultValue={theme}\n                        onChange={(event) => setTheme(event.target.value)}\n                    >\n                        {themes.map((theme, index) => {\n                            return (\n                                <option key={index} value={theme}>\n                                    {theme}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n                <div className=\"form-group col-lg-2 col-md-3\">\n                    <label>Font Size</label>\n                    <select\n                        className=\"form-select\"\n                        defaultValue={fontSize}\n                        onChange={(event) => setFontSize(event.target.value)}\n                    >\n                        {fontSizes.map((fontSize, index) => {\n                            return (\n                                <option key={index} value={fontSize}>\n                                    {fontSize}\n                                </option>\n                            );\n                        })}\n                    </select>\n                </div>\n                <div className=\"form-group col-lg-2 col-md-3\">\n                    <br />\n                    <button\n                        className=\"btn btn-secondary\"\n                        onClick={() => {\n                            navigator.clipboard.writeText(window.location.href);\n                        }}\n                    >\n                        Copy room link\n                    </button>\n                </div>\n                <div className=\"form-group col-lg-2 col-md-2\">\n                    <br />\n                    <button\n                        className={`btn btn-${inAudio ? 'primary' : 'secondary'}`}\n                        onClick={() => setInAudio(!inAudio)}\n                    >\n                        {inAudio ? 'Leave Audio' : 'Join Audio'} Room\n                    </button>\n                </div>\n                {inAudio ? (\n                    <div className=\"form-group col-lg-1 col-md-2\">\n                        <br />\n                        <button\n                            className={`btn btn-${!isMuted ? 'primary' : 'secondary'}`}\n                            onClick={() => setIsMuted(!isMuted)}\n                        >\n                            {isMuted ? 'Muted' : 'Speaking'}\n                        </button>\n                    </div>\n                ) : (\n                    <div className=\"form-group col-lg-1 col-md-2\" />\n                )}\n\n                <div className=\"form-group col-lg-1 col-md-2\">\n                    <br />\n                    <label>Status: {submissionStatus}</label>\n                </div>\n            </div>\n\n            <hr />\n\n            {/*\n            // @ts-expect-error*/}\n            <SplitPane\n                split=\"vertical\"\n                minSize={150}\n                maxSize={windowWidth - 150}\n                defaultSize={windowWidth / 2}\n                className=\"row text-center \"\n                style={{ height: '78vh', width: '100vw', marginRight: '0' }}\n                onChange={handleWidthChange}\n            >\n                <div>\n                    <div className=\"row mb-1\">\n                        <h5 className=\"col\">Code Here</h5>\n\n                        <div className=\"form-group col\">\n                            <button\n                                className=\"btn btn-secondary\"\n                                onClick={() => {\n                                    navigator.clipboard.writeText(body);\n                                }}\n                            >\n                                Copy Code\n                            </button>\n                        </div>\n                        <div className=\"form-group col\">\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={handleSubmit}\n                                disabled={submissionStatus === runningStatus}\n                            >\n                                Save and Run\n                            </button>\n                        </div>\n                    </div>\n                    <Editor\n                        theme={theme}\n                        width={widthLeft}\n                        // @ts-ignore\n                        language={languageToEditorMode[language]}\n                        body={body}\n                        setBody={handleUpdateBody}\n                        fontSize={fontSize}\n                    />\n                </div>\n                <div className=\"text-center\">\n                    <h5>Input</h5>\n                    <Editor\n                        theme={theme}\n                        language={''}\n                        body={input}\n                        setBody={handleUpdateInput}\n                        height={'35vh'}\n                        width={widthRight}\n                        fontSize={fontSize}\n                    />\n                    <h5>Output</h5>\n                    <Editor\n                        theme={theme}\n                        language={''}\n                        body={output}\n                        setBody={setOutput}\n                        readOnly={true}\n                        height={'39vh'}\n                        width={widthRight}\n                        fontSize={fontSize}\n                    />\n                </div>\n            </SplitPane>\n        </div>\n    );\n};\n\nexport default withRouter(Room);\n","import io from 'socket.io-client';\nimport { baseURL } from '../config/config';\n\nconst socket = io(baseURL);\n\nexport default socket;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound: React.FC = () => {\n    return (\n        <div className=\"p-5 text-center\">\n            <h1 className=\"mb-3\">404 Page not found</h1>\n            <Link to=\"/\">Return to home</Link>\n        </div>\n    );\n};\n\nexport default NotFound;\n","import Room from './pages/room';\nimport Home from './pages/home';\nimport NotFound from './pages/notfound';\nimport JoinRoom from './pages/joinroom';\nimport NewRoom from './pages/newroom';\n\ninterface IRoute {\n    path: string;\n    exact: boolean;\n    component: any;\n    props?: { props: any };\n}\n\nlet updatePreviousRooms: (room: string) => any = () => {\n    console.log('default');\n};\n\nlet roomProps = {\n    updatePreviousRooms\n};\n\nconst routes: Array<IRoute> = [\n    {\n        path: '/room/:id',\n        exact: true,\n        component: Room,\n        props: {\n            props: roomProps\n        }\n    },\n    {\n        path: '/404',\n        exact: true,\n        component: NotFound\n    },\n    {\n        path: '/joinroom',\n        exact: true,\n        component: JoinRoom\n    },\n    {\n        path: '/newroom',\n        exact: true,\n        component: NewRoom\n    },\n\n    // Should stay at end\n    {\n        path: '/',\n        exact: false,\n        component: NotFound\n    }\n];\nexport { roomProps };\nexport default routes;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Link, RouteChildrenProps } from 'react-router-dom';\n\nconst JoinRoom: React.FC<RouteChildrenProps<any>> = (props) => {\n    const [roomId, setRoomId] = useState<string>('');\n\n    return (\n        <div className=\"container-fluid\">\n            <div>\n                <div className=\"form-group text-center pt-5 mt-5 row justify-content-center\">\n                    <div className=\"col-4\">\n                        <h1>Enter Room ID</h1>\n                        <input\n                            type=\"text\"\n                            value={roomId}\n                            onChange={(e) => setRoomId(e.target.value)}\n                            className=\"form-control\"\n                            placeholder=\"Enter room id\"\n                        />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">\n                            Ask from room host or <Link to=\"/newroom\"> Make your own room </Link>\n                        </small>\n                    </div>\n                </div>\n                <div className=\"form-group text-center pt-3 row justify-content-center\">\n                    <button\n                        onClick={() => {\n                            if (roomId) props.history.push(`/room/${roomId}`);\n                        }}\n                        className=\"btn btn-primary col-2 text-lg\"\n                    >\n                        <h3>Join Room</h3>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default JoinRoom;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Link, RouteChildrenProps } from 'react-router-dom';\nimport API from '../utils/API';\n\nconst NewRoom: React.FC<RouteChildrenProps<any>> = (props) => {\n    const [roomName, setRoomName] = useState<string>('');\n\n    const handleSubmit = () => {\n        API.post('/api/room', { title: roomName })\n            .then((res) => {\n                props.history.push(`/room/${res.data.data.id}`);\n            })\n            .catch((err) => {\n                alert('Looks like some error occured');\n            });\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div>\n                <div className=\"form-group text-center pt-5 mt-5 row justify-content-center\">\n                    <div className=\"col-4\">\n                        <h1>Enter Room Name</h1>\n                        <input\n                            type=\"text\"\n                            value={roomName}\n                            onChange={(e) => setRoomName(e.target.value)}\n                            className=\"form-control\"\n                            placeholder=\"Enter room name\"\n                        />\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">\n                            Create your room or <Link to=\"/joinroom\"> Join another </Link>\n                        </small>\n                    </div>\n                </div>\n                <div className=\"form-group text-center pt-3 row justify-content-center\">\n                    <button onClick={handleSubmit} className=\"btn btn-primary col-2 text-lg\">\n                        <h3>Join Room</h3>\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NewRoom;\n","import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { BrowserRouter, Route, Switch, RouteComponentProps } from 'react-router-dom';\nimport Header from './components/header';\nimport Home from './pages/home';\nimport routes, { roomProps } from './routes';\n\nconst App: React.FC = () => {\n    const [previousRooms, setPreviousRooms] = useState<string[]>([]);\n\n    roomProps.updatePreviousRooms = (room) => {\n        if (previousRooms[0] === room) return;\n        let newRooms = [...previousRooms];\n        newRooms.unshift(room);\n        newRooms.slice(0, 40);\n        setPreviousRooms(newRooms);\n    };\n\n    useEffect(() => {\n        const prevRoomsString = localStorage.getItem('previousRooms');\n        if (prevRoomsString) {\n            setPreviousRooms(JSON.parse(prevRoomsString).previousRooms);\n        }\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem('previousRooms', JSON.stringify({ previousRooms }));\n    }, [previousRooms]);\n\n    return (\n        <div style={{ height: '100vh' }} className=\"bg-light\">\n            <BrowserRouter>\n                <Header />\n                <br />\n                <Switch>\n                    {/* Adding this manually because this structure of routes sucks */}\n                    <Route exact path=\"/\" render={() => <Home previousRooms={previousRooms} />} />\n                    {routes.map((route, index) => {\n                        return (\n                            <Route\n                                key={index}\n                                path={route.path}\n                                exact={route.exact}\n                                render={(props: RouteComponentProps<any>) => (\n                                    <route.component\n                                        {...props}\n                                        {...(route.props ? route.props.props : {})}\n                                    />\n                                )}\n                            />\n                        );\n                    })}\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}